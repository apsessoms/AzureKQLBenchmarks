// Run query in resource graph explorer to see ensure that Network Watcher is 'Enabled'. CIS Azure Fundamental Benchmark 6.6.

resources
| where type =~ "microsoft.network/networkwatchers/flowlogs" and isnotnull(properties)
| extend targetResourceId = tostring(properties.targetResourceId)
| extend storageId = tostring(properties.storageId)
| extend status = iff(properties.enabled =~ 'true', "Enabled", "Disabled")
| extend provisioningState = tostring(properties.provisioniNBMEngState)
| extend statusIcon = iff(properties.enabled =~ 'true', 8, 90)
| extend flowAnalyticsConfiguration = iff(isnotnull(properties.flowAnalyticsConfiguration), properties.flowAnalyticsConfiguration, parsejson("null"))
| extend networkWatcherFlowAnalyticsConfiguration = iff(isnotnull(flowAnalyticsConfiguration.networkWatcherFlowAnalyticsConfiguration), flowAnalyticsConfiguration.networkWatcherFlowAnalyticsConfiguration, parsejson("null"))
| extend workspaceResourceId = iff(networkWatcherFlowAnalyticsConfiguration.enabled =~ 'true', tostring(networkWatcherFlowAnalyticsConfiguration.workspaceResourceId), parsejson("null"))
| extend flowLogType = iff(properties.targetResourceId contains "Microsoft.Network/virtualNetworks", 'Virtual network', 'Network security group')
| project id, name, subscriptionId, resourceGroup, location, type, kind, tags, provisioningState, status, statusIcon, targetResourceId, storageId, workspaceResourceId, flowLogType
| extend locationDisplayName=case(location =~ 'eastus','East US',location =~ 'eastus2','East US 2',location =~ 'southcentralus','South Central US',location =~ 'westus2','West US 2',location =~ 'westus3','West US 3',location =~ 'australiaeast','Australia East',location =~ 'southeastasia','Southeast Asia',location =~ 'northeurope','North Europe',location =~ 'swedencentral','Sweden Central',location =~ 'uksouth','UK South',location =~ 'westeurope','West Europe',location =~ 'centralus','Central US',location =~ 'southafricanorth','South Africa North',location =~ 'centralindia','Central India',location =~ 'eastasia','East Asia',location =~ 'japaneast','Japan East',location =~ 'koreacentral','Korea Central',location =~ 'canadacentral','Canada Central',location =~ 'francecentral','France Central',location =~ 'germanywestcentral','Germany West Central',location =~ 'norwayeast','Norway East',location =~ 'polandcentral','Poland Central',location =~ 'switzerlandnorth','Switzerland North',location =~ 'uaenorth','UAE North',location =~ 'brazilsouth','Brazil South',location =~ 'qatarcentral','Qatar Central',location =~ 'centralusstage','Central US (Stage)',location =~ 'eastusstage','East US (Stage)',location =~ 'eastus2stage','East US 2 (Stage)',location =~ 'northcentralusstage','North Central US (Stage)',location =~ 'southcentralusstage','South Central US (Stage)',location =~ 'westusstage','West US (Stage)',location =~ 'westus2stage','West US 2 (Stage)',location =~ 'asia','Asia',location =~ 'asiapacific','Asia Pacific',location =~ 'australia','Australia',location =~ 'brazil','Brazil',location =~ 'canada','Canada',location =~ 'europe','Europe',location =~ 'france','France',location =~ 'germany','Germany',location =~ 'global','Global',location =~ 'india','India',location =~ 'japan','Japan',location =~ 'korea','Korea',location =~ 'norway','Norway',location =~ 'singapore','Singapore',location =~ 'southafrica','South Africa',location =~ 'switzerland','Switzerland',location =~ 'uae','United Arab Emirates',location =~ 'uk','United Kingdom',location =~ 'unitedstates','United States',location =~ 'unitedstateseuap','United States EUAP',location =~ 'eastasiastage','East Asia (Stage)',location =~ 'southeastasiastage','Southeast Asia (Stage)',location =~ 'brazilus','Brazil US',location =~ 'northcentralus','North Central US',location =~ 'westus','West US',location =~ 'jioindiawest','Jio India West',location =~ 'westcentralus','West Central US',location =~ 'southafricawest','South Africa West',location =~ 'australiacentral','Australia Central',location =~ 'australiacentral2','Australia Central 2',location =~ 'australiasoutheast','Australia Southeast',location =~ 'japanwest','Japan West',location =~ 'jioindiacentral','Jio India Central',location =~ 'koreasouth','Korea South',location =~ 'southindia','South India',location =~ 'westindia','West India',location =~ 'canadaeast','Canada East',location =~ 'francesouth','France South',location =~ 'germanynorth','Germany North',location =~ 'norwaywest','Norway West',location =~ 'switzerlandwest','Switzerland West',location =~ 'ukwest','UK West',location =~ 'uaecentral','UAE Central',location =~ 'brazilsoutheast','Brazil Southeast',location)
| extend subscriptionDisplayName=case(subscriptionId =~ '0804a75d-8b01-4a09-9d78-75be2f6407ea','NBME DEV',subscriptionId =~ '5994d9aa-a10d-4b37-b06e-84cd93bc42f7','NBME INF',subscriptionId =~ '1ddd271c-1a8c-443f-b131-b9f1337c1a7c','NBME PRD',subscriptionId =~ '1fddec9f-66b7-4244-b322-2fd4a9a3c762','NBME TST',subscriptionId =~ 'd7310ab8-3c30-4d5f-a7b4-df000ba06e3f','NBME UAT',subscriptionId)
| where (type !~ ('astronomer.astro/organizations'))
| where (type !~ ('dell.storage/filesystems'))
| where (type !~ ('informatica.datamanagement/organizations'))
| where (type !~ ('paloaltonetworks.cloudngfw/globalrulestacks'))
| where (type !~ ('solarwinds.observability/organizations'))
| where (type !~ ('microsoft.azureactivedirectory/ciamdirectories'))
| where (type !~ ('microsoft.agfoodplatform/farmbeats'))
| where (type !~ ('microsoft.anybuild/clusters'))
| where (type !~ ('microsoft.mobilepacketcore/mobilepacketcores/nfvis/clusters/amfdeployments'))
| where (type !~ ('microsoft.mobilepacketcore/mobilepacketcores/amfprofiles'))
| where (type !~ ('microsoft.mobilepacketcore/mobilepacketcores/nfvis/clusters'))
| where (type !~ ('microsoft.mobilepacketcore/mobilepacketcores/configsnapshots'))
| where (type !~ ('microsoft.mobilepacketcore/mobilepacketcores/datanetworks'))
| where (type !~ ('microsoft.mobilepacketcore/mobilepacketcores/deploymentareas'))
| where (type !~ ('microsoft.mobilepacketcore/mobilepacketcores/networkslices'))
| where (type !~ ('microsoft.mobilepacketcore/mobilepacketcores/nfvis'))
| where (type !~ ('microsoft.mobilepacketcore/mobilepacketcores/nfvis/clusters/nrfdeployments'))
| where (type !~ ('microsoft.mobilepacketcore/mobilepacketcores/nrfprofiles'))
| where (type !~ ('microsoft.mobilepacketcore/mobilepacketcores'))
| where (type !~ ('microsoft.mobilepacketcore/mobilepacketcores/packetdetectionrules'))
| where (type !~ ('microsoft.mobilepacketcore/mobilepacketcores/packetflowdescriptions'))
| where (type !~ ('microsoft.mobilepacketcore/mobilepacketcores/pccrules'))
| where (type !~ ('microsoft.mobilepacketcore/mobilepacketcores/pccrulebases'))
| where (type !~ ('microsoft.mobilepacketcore/mobilepacketcores/plmns'))
| where (type !~ ('microsoft.mobilepacketcore/mobilepacketcores/serviceareas'))
| where (type !~ ('microsoft.mobilepacketcore/mobilepacketcores/nfvis/clusters/smfdeployments'))
| where (type !~ ('microsoft.mobilepacketcore/mobilepacketcores/smfprofiles'))
| where (type !~ ('microsoft.mobilepacketcore/mobilepacketcores/subscriberanalyzers'))
| where (type !~ ('microsoft.mobilepacketcore/mobilepacketcores/serviceareas/trackingareas'))
| where (type !~ ('microsoft.mobilepacketcore/mobilepacketcores/nfvis/clusters/upfdeployments'))
| where (type !~ ('microsoft.mobilepacketcore/mobilepacketcores/upfprofiles'))
| where (type !~ ('microsoft.cdn/profiles/customdomains'))
| where (type !~ ('microsoft.cdn/profiles/afdendpoints'))
| where (type !~ ('microsoft.cdn/profiles/origingroups/origins'))
| where (type !~ ('microsoft.cdn/profiles/origingroups'))
| where (type !~ ('microsoft.cdn/profiles/afdendpoints/routes'))
| where (type !~ ('microsoft.cdn/profiles/rulesets/rules'))
| where (type !~ ('microsoft.cdn/profiles/rulesets'))
| where (type !~ ('microsoft.cdn/profiles/secrets'))
| where (type !~ ('microsoft.cdn/profiles/securitypolicies'))
| where (type !~ ('microsoft.cloudtest/accounts'))
| where (type !~ ('microsoft.cloudtest/hostedpools'))
| where (type !~ ('microsoft.cloudtest/images'))
| where (type !~ ('microsoft.cloudtest/pools'))
| where (type !~ ('microsoft.codesigning/codesigningaccounts'))
| where (type !~ ('microsoft.kubernetesconfiguration/extensions'))
| where (type !~ ('microsoft.containerservice/managedclusters/microsoft.kubernetesconfiguration/extensions'))
| where (type !~ ('microsoft.kubernetes/connectedclusters/microsoft.kubernetesconfiguration/namespaces'))
| where (type !~ ('microsoft.containerservice/managedclusters/microsoft.kubernetesconfiguration/namespaces'))
| where (type !~ ('microsoft.kubernetes/connectedclusters/microsoft.kubernetesconfiguration/fluxconfigurations'))
| where (type !~ ('microsoft.containerservice/managedclusters/microsoft.kubernetesconfiguration/fluxconfigurations'))
| where (type !~ ('microsoft.portalservices/extensions/deployments'))
| where (type !~ ('microsoft.portalservices/extensions'))
| where (type !~ ('microsoft.portalservices/extensions/slots'))
| where (type !~ ('microsoft.portalservices/extensions/versions'))
| where (type !~ ('microsoft.azuredatatransfer/connections'))
| where (type !~ ('microsoft.azuredatatransfer/connections/flows'))
| where (type !~ ('microsoft.azuredatatransfer/pipelines'))
| where (type !~ ('microsoft.databasewatcher/watchers'))
| where (type !~ ('microsoft.datacollaboration/workspaces'))
| where (type !~ ('microsoft.deviceregistry/devices'))
| where (type !~ ('microsoft.hdinsight/clusterpools/clusters'))
| where (type !~ ('microsoft.hdinsight/clusterpools'))
| where (type !~ ('microsoft.healthmodel/healthmodels'))
| where (type !~ ('microsoft.hybridcompute/machinesesu'))
| where (type !~ ('microsoft.network/virtualhubs')) or ((kind =~ ('routeserver')))
| where (type !~ ('microsoft.metaverse/metaverses'))
| where (type !~ ('microsoft.modsimworkbench/workbenches/chambers'))
| where (type !~ ('microsoft.modsimworkbench/workbenches/chambers/connectors'))
| where (type !~ ('microsoft.modsimworkbench/workbenches/chambers/files'))
| where (type !~ ('microsoft.modsimworkbench/workbenches/chambers/filerequests'))
| where (type !~ ('microsoft.modsimworkbench/workbenches/chambers/licenses'))
| where (type !~ ('microsoft.modsimworkbench/workbenches/chambers/storages'))
| where (type !~ ('microsoft.modsimworkbench/workbenches/chambers/workloads'))
| where (type !~ ('microsoft.modsimworkbench/workbenches/sharedstorages'))
| where (type !~ ('microsoft.modsimworkbench/workbenches'))
| where (type !~ ('microsoft.insights/diagnosticsettings'))
| where not((type =~ ('microsoft.network/serviceendpointpolicies')) and ((kind =~ ('internal'))))
| where (type !~ ('microsoft.openlogisticsplatform/workspaces'))
| where (type !~ ('microsoft.scom/managedinstances'))
| where (type !~ ('microsoft.orbital/edgesites'))
| where (type !~ ('microsoft.orbital/groundstations'))
| where (type !~ ('microsoft.orbital/l2connections'))
| where (type !~ ('microsoft.recommendationsservice/accounts/modeling'))
| where (type !~ ('microsoft.recommendationsservice/accounts/serviceendpoints'))
| where (type !~ ('microsoft.recoveryservicesbvtd/vaults'))
| where (type !~ ('microsoft.recoveryservicesbvtd2/vaults'))
| where (type !~ ('microsoft.recoveryservicesintd/vaults'))
| where (type !~ ('microsoft.recoveryservicesintd2/vaults'))
| where (type !~ ('microsoft.deploymentmanager/rollouts'))
| where (type !~ ('microsoft.datareplication/replicationvaults'))
| where (type !~ ('microsoft.storage/storagetasks'))
| where not((type =~ ('microsoft.synapse/workspaces/sqlpools')) and ((kind =~ ('v3'))))
| where (type !~ ('microsoft.mission/catalogs'))
| where (type !~ ('microsoft.mission/communities'))
| where (type !~ ('microsoft.mission/virtualenclaves/endpoints'))
| where (type !~ ('microsoft.mission/externalconnections'))
| where (type !~ ('microsoft.mission/internalconnections'))
| where (type !~ ('microsoft.mission/virtualenclaves'))
| where (type !~ ('microsoft.mission/virtualenclaves/workloads'))
| where (type !~ ('microsoft.windowspushnotificationservices/registrations'))
| where (type !~ ('microsoft.manufacturingplatform/manufacturingdataservices'))
| where not((type =~ ('microsoft.sql/servers/databases')) and ((kind in~ ('system','v2.0,system','v12.0,system','v12.0,user,datawarehouse,gen2,analytics'))))
| where not((type =~ ('microsoft.sql/servers')) and ((kind =~ ('v12.0,analytics'))))
| project name,provisioningState,resourceGroup,locationDisplayName,subscriptionDisplayName,status,statusIcon,flowLogType,targetResourceId,storageId,workspaceResourceId,id,type,kind,location,subscriptionId,tags
| sort by (tolower(tostring(name))) asc
